"use strict";(self.webpackChunkmy_website=self.webpackChunkmy_website||[]).push([[1701],{3905:(e,t,n)=>{n.d(t,{Zo:()=>p,kt:()=>m});var i=n(67294);function a(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function r(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);t&&(i=i.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,i)}return n}function l(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?r(Object(n),!0).forEach((function(t){a(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):r(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function s(e,t){if(null==e)return{};var n,i,a=function(e,t){if(null==e)return{};var n,i,a={},r=Object.keys(e);for(i=0;i<r.length;i++)n=r[i],t.indexOf(n)>=0||(a[n]=e[n]);return a}(e,t);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);for(i=0;i<r.length;i++)n=r[i],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(a[n]=e[n])}return a}var o=i.createContext({}),d=function(e){var t=i.useContext(o),n=t;return e&&(n="function"==typeof e?e(t):l(l({},t),e)),n},p=function(e){var t=d(e.components);return i.createElement(o.Provider,{value:t},e.children)},c={inlineCode:"code",wrapper:function(e){var t=e.children;return i.createElement(i.Fragment,{},t)}},u=i.forwardRef((function(e,t){var n=e.components,a=e.mdxType,r=e.originalType,o=e.parentName,p=s(e,["components","mdxType","originalType","parentName"]),u=d(n),m=a,k=u["".concat(o,".").concat(m)]||u[m]||c[m]||r;return n?i.createElement(k,l(l({ref:t},p),{},{components:n})):i.createElement(k,l({ref:t},p))}));function m(e,t){var n=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var r=n.length,l=new Array(r);l[0]=u;var s={};for(var o in t)hasOwnProperty.call(t,o)&&(s[o]=t[o]);s.originalType=e,s.mdxType="string"==typeof e?e:a,l[1]=s;for(var d=2;d<r;d++)l[d]=n[d];return i.createElement.apply(null,l)}return i.createElement.apply(null,n)}u.displayName="MDXCreateElement"},79307:(e,t,n)=>{n.r(t),n.d(t,{contentTitle:()=>l,default:()=>p,frontMatter:()=>r,metadata:()=>s,toc:()=>o});var i=n(87462),a=(n(67294),n(3905));const r={},l="Create a User",s={type:"api",id:"create-a-user",unversionedId:"create-a-user",title:"Create a User",description:"",slug:"/create-a-user",frontMatter:{},api:{description:'Create a new user for a given <a href="https://auth0.com/docs/connections/database">database</a> or <a href="https://auth0.com/docs/connections/passwordless">passwordless</a> connection.\\n\\nNote: <code>connection</code> is required but other parameters such as <code>email</code> and <code>password</code> are dependent upon the type of connection.',tags:["users"],requestBody:{content:{"application/json":{schema:{type:"object",required:["connection"],properties:{email:{type:"string",description:"The user's email.",default:"john.doe@gmail.com"},phone_number:{type:"string",description:"The user's phone number (following the E.164 recommendation), only valid for users from SMS connections.",default:"+199999999999999"},user_metadata:{type:"object",description:"Data related to the user that does not affect the application's core functionality.",additionalProperties:{}},blocked:{type:"boolean",description:"Whether this user was blocked by an administrator (true) or not (false).",default:!1},email_verified:{type:"boolean",description:"Whether this email address is verified (true) or unverified (false). User will receive a verification email after creation if `email_verified` is false or not specified",default:!1},phone_verified:{type:"boolean",description:"Whether this phone number has been verified (true) or not (false).",default:!1},app_metadata:{type:"object",description:"Data related to the user that does affect the application's core functionality.",properties:{clientID:{},globalClientID:{},global_client_id:{},email_verified:{},user_id:{},identities:{},lastIP:{},lastLogin:{},metadata:{},created_at:{},loginsCount:{},_id:{},email:{},blocked:{},__tenant:{},updated_at:{}}},given_name:{type:"string",description:"The user's given name(s).",default:"John",minLength:1,maxLength:150},family_name:{type:"string",description:"The user's family name(s).",default:"Doe",minLength:1,maxLength:150},name:{type:"string",description:"The user's full name.",default:"John Doe",minLength:1,maxLength:300},nickname:{type:"string",description:"The user's nickname.",default:"Johnny",minLength:1,maxLength:300},picture:{type:"string",description:"A URI pointing to the user's picture.",default:"https://secure.gravatar.com/avatar/15626c5e0c749cb912f9d1ad48dba440?s=480&r=pg&d=https%3A%2F%2Fssl.gstatic.com%2Fs2%2Fprofiles%2Fimages%2Fsilhouette80.png"},user_id:{type:"string",description:"The external user's id provided by the identity provider.",default:"abc",minLength:0,maxLength:255},connection:{type:"string",description:"Name of the connection this user should be created in.",default:"Initial-Connection",minLength:1},password:{type:"string",description:"Initial password for this user (mandatory only for auth0 connection strategy).",default:"secret",minLength:1},verify_email:{type:"boolean",description:"Whether the user will receive a verification email after creation (true) or no email (false). Overrides behavior of `email_verified` parameter.",default:!1},username:{type:"string",description:"The user's username. Only valid if the connection requires a username.",default:"johndoe",minLength:1,maxLength:128}}}},"application/x-www-form-urlencoded":{schema:{type:"object",required:["connection"],properties:{email:{type:"string",description:"The user's email.",default:"john.doe@gmail.com"},phone_number:{type:"string",description:"The user's phone number (following the E.164 recommendation), only valid for users from SMS connections.",default:"+199999999999999"},user_metadata:{type:"object",description:"Data related to the user that does not affect the application's core functionality.",additionalProperties:{}},blocked:{type:"boolean",description:"Whether this user was blocked by an administrator (true) or not (false).",default:!1},email_verified:{type:"boolean",description:"Whether this email address is verified (true) or unverified (false). User will receive a verification email after creation if `email_verified` is false or not specified",default:!1},phone_verified:{type:"boolean",description:"Whether this phone number has been verified (true) or not (false).",default:!1},app_metadata:{type:"object",description:"Data related to the user that does affect the application's core functionality.",properties:{clientID:{},globalClientID:{},global_client_id:{},email_verified:{},user_id:{},identities:{},lastIP:{},lastLogin:{},metadata:{},created_at:{},loginsCount:{},_id:{},email:{},blocked:{},__tenant:{},updated_at:{}}},given_name:{type:"string",description:"The user's given name(s).",default:"John",minLength:1,maxLength:150},family_name:{type:"string",description:"The user's family name(s).",default:"Doe",minLength:1,maxLength:150},name:{type:"string",description:"The user's full name.",default:"John Doe",minLength:1,maxLength:300},nickname:{type:"string",description:"The user's nickname.",default:"Johnny",minLength:1,maxLength:300},picture:{type:"string",description:"A URI pointing to the user's picture.",default:"https://secure.gravatar.com/avatar/15626c5e0c749cb912f9d1ad48dba440?s=480&r=pg&d=https%3A%2F%2Fssl.gstatic.com%2Fs2%2Fprofiles%2Fimages%2Fsilhouette80.png"},user_id:{type:"string",description:"The external user's id provided by the identity provider.",default:"abc",minLength:0,maxLength:255},connection:{type:"string",description:"Name of the connection this user should be created in.",default:"Initial-Connection",minLength:1},password:{type:"string",description:"Initial password for this user (mandatory only for auth0 connection strategy).",default:"secret",minLength:1},verify_email:{type:"boolean",description:"Whether the user will receive a verification email after creation (true) or no email (false). Overrides behavior of `email_verified` parameter.",default:!1},username:{type:"string",description:"The user's username. Only valid if the connection requires a username.",default:"johndoe",minLength:1,maxLength:128}}}}}},responses:{201:{description:"User successfully created.",content:{"application/json":{schema:{type:"object",additionalProperties:{},properties:{user_id:{type:"string",description:"ID of the user which can be used when interacting with other APIs.",default:"auth0|507f1f77bcf86cd799439020"},email:{type:"string",description:"Email address of this user.",default:"john.doe@gmail.com"},email_verified:{type:"boolean",description:"Whether this email address is verified (true) or unverified (false).",default:!1},username:{type:"string",description:"Username of this user.",default:"johndoe"},phone_number:{type:"string",description:'Phone number for this user when using SMS connections. Follows the <a href="https://en.wikipedia.org/wiki/E.164">E.164 recommendation</a>.',default:"+199999999999999"},phone_verified:{type:"boolean",description:"Whether this phone number has been verified (true) or not (false).",default:!1},created_at:{oneOf:[{type:"string",description:"Date and time when this user was created (ISO_8601 format)."},{type:"object",description:"Date and time when this user was created (ISO_8601 format).",additionalProperties:{}}]},updated_at:{oneOf:[{type:"string",description:"Date and time when this user was last updated/modified (ISO_8601 format)."},{type:"object",description:"Date and time when this user was last updated/modified (ISO_8601 format).",additionalProperties:{}}]},identities:{type:"array",description:"Array of user identity objects when accounts are linked.",items:{type:"object",properties:{connection:{type:"string",description:"Name of the connection containing this identity."},user_id:{type:"string",description:"Unique identifier of the user user for this identity."},provider:{type:"string",description:"The type of identity provider"},isSocial:{type:"boolean",description:"Whether this identity is from a social provider (true) or not (false)."},access_token:{type:"string",description:"IDP access token returned only if scope read:user_idp_tokens is defined."},access_token_secret:{type:"string",description:"IDP access token secret returned only if scope read:user_idp_tokens is defined."},refresh_token:{type:"string",description:"IDP refresh token returned only if scope read:user_idp_tokens is defined."},profileData:{type:"object",additionalProperties:{},properties:{email:{type:"string",description:"Email address of this user."},email_verified:{type:"boolean",description:"Whether this email address is verified (true) or unverified (false)."},name:{type:"string",description:"Name of this user."},username:{type:"string",description:"Username of this user.",default:"johndoe"},given_name:{type:"string",description:"Given name/first name/forename of this user."},phone_number:{type:"string",description:"Phone number for this user."},phone_verified:{type:"boolean",description:"Whether this phone number is verified (true) or unverified (false)."},family_name:{type:"string",description:"Family name/last name/surname of this user."}}}}}},app_metadata:{type:"object",description:"User metadata to which this user has read-only access.",additionalProperties:{}},user_metadata:{type:"object",description:"User metadata to which this user has read/write access.",additionalProperties:{}},picture:{type:"string",description:"URL to picture, photo, or avatar of this user."},name:{type:"string",description:"Name of this user."},nickname:{type:"string",description:"Preferred nickname or alias of this user."},multifactor:{type:"array",description:"List of multi-factor authentication providers with which this user has enrolled.",items:{type:"string"}},last_ip:{type:"string",description:"Last IP address from which this user logged in."},last_login:{oneOf:[{type:"string",description:"Last date and time this user logged in (ISO_8601 format)."},{type:"object",description:"Last date and time this user logged in (ISO_8601 format).",additionalProperties:{}}]},logins_count:{type:"integer",description:"Total number of logins this user has performed."},blocked:{type:"boolean",description:"Whether this user was blocked by an administrator (true) or is not (false)."},given_name:{type:"string",description:"Given name/first name/forename of this user."},family_name:{type:"string",description:"Family name/last name/surname of this user."}}}}}},400:{description:"Connection is disabled."},401:{description:"Invalid signature received for JSON Web Token validation."},403:{description:"Insufficient scope, expected any of: create:users."},409:{description:"User already exists."},429:{description:"Too many requests. Check the X-RateLimit-Limit, X-RateLimit-Remaining and X-RateLimit-Reset headers."}},operationId:"post_users",security:[{bearerAuth:[]},{oAuth2ClientCredentials:["create:users"]}],method:"post",path:"/users",servers:[{url:"https://login0.local.dev.auth0.com/api/v2"}],securitySchemes:{bearerAuth:{type:"http",scheme:"bearer",bearerFormat:"jwt"},oAuth2ClientCredentials:{type:"oauth2",flows:{clientCredentials:{tokenUrl:"https://login0.local.dev.auth0.com/oauth/token/","x-form-parameters":{audience:"https://login0.local.dev.auth0.com/api/v2/"},scopes:{"delete:actions":"Delete Actions","read:actions":"Read Actions","update:actions":"Update Actions","create:actions":"Create Actions","delete:anomaly_blocks":"Delete Anomaly Detection Blocks","read:anomaly_blocks":"Read Anomaly Detection Blocks","read:attack_protection":"Read attack protection","update:attack_protection":"Update attack protection","blacklist:tokens":"Blacklist Tokens","read:branding":"Read branding settings","update:branding":"Update branding settings","delete:branding":"Delete branding settings","delete:client_grants":"Delete Client Grants","read:client_grants":"Read Client Grants","update:client_grants":"Update Client Grants","create:client_grants":"Create Client Grants","delete:clients":"Delete Clients","read:clients":"Read Clients","update:clients":"Update Clients","create:clients":"Create Clients","delete:client_credentials":"Delete Client Credentials","read:client_credentials":"Read Client Credentials","update:client_credentials":"Update Client Credentials","create:client_credentials":"Create Client Credentials","delete:client_keys":"Delete Client Keys","read:client_keys":"Read Client Keys","update:client_keys":"Update Client Keys","create:client_keys":"Create Client Keys","delete:connections":"Delete Connections","read:connections":"Read Connections","update:connections":"Update Connections","create:connections":"Create Connections","delete:custom_domains":"Delete custom domain configurations","read:custom_domains":"Read custom domain configurations","update:custom_domains":"Update custom domain configurations","create:custom_domains":"Configure new custom domains","update:device_codes":"Update Device Codes","read:device_codes":"Read Device Codes","delete:device_credentials":"Delete Device Credentials","read:device_credentials":"Read Device Credentials","update:device_credentials":"Update Device Credentials","create:device_credentials":"Create Device Credentials","delete:current_user_device_credentials":"Delete Current User Device Credentials","read:current_user_device_credentials":"Read Current User Device Credentials","create:current_user_device_credentials":"Create Current User Device Credentials","delete:email_templates":"Delete email templates","read:email_templates":"Read email emplates","update:email_templates":"Update email templates","create:email_templates":"Create email templates","read:email_triggers":"Read email triggers","update:email_triggers":"Update email triggers","delete:email_provider":"Delete Email Provider","read:email_provider":"Read Email Provider","update:email_provider":"Update Email Provider","create:email_provider":"Create Email Provider","read:entitlements":"Read entitlements","delete:guardian_enrollments":"Delete Guardian enrollments","read:guardian_enrollments":"Read Guardian enrollments","create:guardian_enrollment_tickets":"Create enrollment tickets for Guardian","read:guardian_factors":"Read Guardian factors configuration","update:guardian_factors":"Update Guardian factors","read:grants":"Read User Grants","delete:grants":"Delete User Grants","delete:hooks":"Delete Hooks","read:hooks":"Read Hooks","update:hooks":"Update Hooks","create:hooks":"Create Hooks","read:insights":"Read Insights","delete:integrations":"Delete integrations","read:integrations":"Read integrations","update:integrations":"Update integrations","create:integrations":"Create integrations","read:limits":"Read entity limits","update:limits":"Update entity limits","read:log_streams":"Read log_streams","delete:log_streams":"Delete log_streams","update:log_streams":"Update log_streams","create:log_streams":"Create log_streams","read:logs":"Read Logs","read:logs_users":"Read logs relating to users","read:mfa_policies":"Read Multifactor Authentication policies","update:mfa_policies":"Update Multifactor Authentication policies","delete:organization_connections":"Delete organization connections","read:organization_connections":"Read organization connections","update:organization_connections":"Update organization connections","create:organization_connections":"Create organization connections","delete:organization_invitations":"Delete organization invitations","read:organization_invitations":"Read organization invitations","create:organization_invitations":"Create organization invitations","delete:organization_member_roles":"Delete organization member roles","read:organization_member_roles":"Read organization member roles","create:organization_member_roles":"Create organization member roles","delete:organizations":"Delete organizations","read:organizations":"Read organizations","create:organizations":"Create organizations","update:organizations":"Update organizations","delete:organization_members":"Delete organization members","read:organization_members":"Read organization members","create:organization_members":"Create organization members","read:organizations_summary":"Read organization summary","create:passwords_checking_job":"Create password checking jobs","delete:passwords_checking_job":"Deletes password checking job and all its resources","read:prompts":"Read prompts settings","update:prompts":"Update prompts settings","delete:requested_scopes":"Delete Requested Scopes","read:requested_scopes":"Read Requested Scopes","update:requested_scopes":"Update Requested Scopes","create:requested_scopes":"Create Requested Scopes","delete:resource_servers":"Delete Resource Servers","read:resource_servers":"Read Resource Servers","update:resource_servers":"Update Resource Servers","create:resource_servers":"Create Resource Servers","create:role_members":"Create role members","read:role_members":"Read role members","update:role_members":"Update role members","delete:role_members":"Delete role members","delete:roles":"Delete roles","read:roles":"Read roles","update:roles":"Update roles","create:roles":"Create roles","delete:rules":"Delete Rules","read:rules":"Read Rules","update:rules":"Update Rules","create:rules":"Create Rules","delete:rules_configs":"Delete Rules Configs","read:rules_configs":"Read Rules Configs","update:rules_configs":"Update Rules Configs","delete:signing_keys":"Delete signing keys","create:signing_keys":"Create signing keys","read:signing_keys":"Read signing keys","update:signing_keys":"Update signing keys","delete:shields":"Delete Shields","read:shields":"Read Shields","update:shields":"Update Shields","create:shields":"Create Shields","read:stats":"Read Stats","create:test_email_dispatch":"Create test email dispatch","read:tenant_settings":"Read Tenant Settings","update:tenant_settings":"Update Tenant Settings","read:triggers":"Read Triggers","update:triggers":"Update Triggers","create:user_tickets":"Create User Tickets","delete:users":"Delete Users","read:users":"Read Users","update:users":"Update Users","create:users":"Create Users","read:current_user":"Read Current User","delete:current_user":"Delete Current User","read:user_idp_tokens":"Read Users IDP tokens","delete:users_app_metadata":"Delete Users App Metadata","read:users_app_metadata":"Read Users App Metadata","update:users_app_metadata":"Update Users App Metadata","create:users_app_metadata":"Create Users App Metadata","delete:user_custom_blocks":"Delete Custom User Blocks","read:user_custom_blocks":"Read Custom User Blocks","create:user_custom_blocks":"Create Custom User Blocks","update:current_user_identities":"Update Current User Identities"}}}}},jsonRequestBodyExample:{email:"string",phone_number:"string",user_metadata:{},blocked:!1,email_verified:!1,phone_verified:!1,app_metadata:{},given_name:"string",family_name:"string",name:"string",nickname:"string",picture:"string",user_id:"string",connection:"string",password:"string",verify_email:!1,username:"string"},info:{title:"Auth0 Management API",description:"Auth0 Management API v2.",termsOfService:"https://auth0.com/web-terms/",version:"2.0"},postman:{name:"Create a User",description:{content:'Create a new user for a given <a href="https://auth0.com/docs/connections/database">database</a> or <a href="https://auth0.com/docs/connections/passwordless">passwordless</a> connection.\\n\\nNote: <code>connection</code> is required but other parameters such as <code>email</code> and <code>password</code> are dependent upon the type of connection.',type:"text/plain"},url:{path:["users"],host:["{{baseUrl}}"],query:[],variable:[]},header:[{key:"Content-Type",value:"application/x-www-form-urlencoded"}],method:"POST",body:{mode:"urlencoded",urlencoded:[{description:{content:"Name of the connection this user should be created in.",type:"text/plain"},key:"connection",value:"Initial-Connection"},{description:{content:"The user's email.",type:"text/plain"},key:"email",value:"john.doe@gmail.com"},{description:{content:"The user's phone number (following the E.164 recommendation), only valid for users from SMS connections.",type:"text/plain"},key:"phone_number",value:"+199999999999999"},{description:{content:"Data related to the user that does not affect the application's core functionality.",type:"text/plain"},key:"user_metadata",value:"<object>"},{description:{content:"Whether this user was blocked by an administrator (true) or not (false).",type:"text/plain"},key:"blocked",value:"false"},{description:{content:"Whether this email address is verified (true) or unverified (false). User will receive a verification email after creation if `email_verified` is false or not specified",type:"text/plain"},key:"email_verified",value:"false"},{description:{content:"Whether this phone number has been verified (true) or not (false).",type:"text/plain"},key:"phone_verified",value:"false"},{description:{content:"Data related to the user that does affect the application's core functionality.",type:"text/plain"},key:"app_metadata",value:'{"clientID":"schema type not provided","globalClientID":"schema type not provided","global_client_id":"schema type not provided","email_verified":"schema type not provided","user_id":"schema type not provided","identities":"schema type not provided","lastIP":"schema type not provided","lastLogin":"schema type not provided","metadata":"schema type not provided","created_at":"schema type not provided","loginsCount":"schema type not provided","_id":"schema type not provided","email":"schema type not provided","blocked":"schema type not provided","__tenant":"schema type not provided","updated_at":"schema type not provided"}'},{description:{content:"The user's given name(s).",type:"text/plain"},key:"given_name",value:"John"},{description:{content:"The user's family name(s).",type:"text/plain"},key:"family_name",value:"Doe"},{description:{content:"The user's full name.",type:"text/plain"},key:"name",value:"John Doe"},{description:{content:"The user's nickname.",type:"text/plain"},key:"nickname",value:"Johnny"},{description:{content:"A URI pointing to the user's picture.",type:"text/plain"},key:"picture",value:"https://secure.gravatar.com/avatar/15626c5e0c749cb912f9d1ad48dba440?s=480&r=pg&d=https%3A%2F%2Fssl.gstatic.com%2Fs2%2Fprofiles%2Fimages%2Fsilhouette80.png"},{description:{content:"The external user's id provided by the identity provider.",type:"text/plain"},key:"user_id",value:"abc"},{description:{content:"Initial password for this user (mandatory only for auth0 connection strategy).",type:"text/plain"},key:"password",value:"secret"},{description:{content:"Whether the user will receive a verification email after creation (true) or no email (false). Overrides behavior of `email_verified` parameter.",type:"text/plain"},key:"verify_email",value:"false"},{description:{content:"The user's username. Only valid if the connection requires a username.",type:"text/plain"},key:"username",value:"johndoe"}]},auth:{type:"oauth2",oauth2:[]}}},source:"@site/openapi.json",sourceDirName:".",permalink:"/docusaurus-openapi-demo/api/create-a-user",previous:{title:"List or Search Users",permalink:"/docusaurus-openapi-demo/api/list-or-search-users"},next:{title:"Search Users by Email",permalink:"/docusaurus-openapi-demo/api/search-users-by-email"}},o=[],d={toc:o};function p(e){let{components:t,...n}=e;return(0,a.kt)("wrapper",(0,i.Z)({},d,n,{components:t,mdxType:"MDXLayout"}),(0,a.kt)("h1",{id:"create-a-user"},"Create a User"),(0,a.kt)("p",null,"Create a new user for a given ",(0,a.kt)("a",{href:"https://auth0.com/docs/connections/database"},"database")," or ",(0,a.kt)("a",{href:"https://auth0.com/docs/connections/passwordless"},"passwordless")," connection.\\n\\nNote: ",(0,a.kt)("code",null,"connection")," is required but other parameters such as ",(0,a.kt)("code",null,"email")," and ",(0,a.kt)("code",null,"password")," are dependent upon the type of connection."),(0,a.kt)("table",{style:{display:"table",width:"100%"}},(0,a.kt)("thead",null,(0,a.kt)("tr",null,(0,a.kt)("th",{style:{textAlign:"left"}},"Request Body ",(0,a.kt)("div",null)))),(0,a.kt)("tbody",null,(0,a.kt)("tr",null,(0,a.kt)("td",null,(0,a.kt)("code",null,"email"),(0,a.kt)("span",{style:{opacity:"0.6"}}," string"),(0,a.kt)("div",{style:{marginTop:"var(--ifm-table-cell-padding)"}},(0,a.kt)("p",null,"The user's email.")))),(0,a.kt)("tr",null,(0,a.kt)("td",null,(0,a.kt)("code",null,"phone_number"),(0,a.kt)("span",{style:{opacity:"0.6"}}," string"),(0,a.kt)("div",{style:{marginTop:"var(--ifm-table-cell-padding)"}},(0,a.kt)("p",null,"The user's phone number (following the E.164 recommendation), only valid for users from SMS connections.")))),(0,a.kt)("tr",null,(0,a.kt)("td",null,(0,a.kt)("code",null,"user_metadata"),(0,a.kt)("span",{style:{opacity:"0.6"}}," object"),(0,a.kt)("div",{style:{marginTop:"var(--ifm-table-cell-padding)"}},(0,a.kt)("p",null,"Data related to the user that does not affect the application's core functionality.")))),(0,a.kt)("tr",null,(0,a.kt)("td",null,(0,a.kt)("code",null,"blocked"),(0,a.kt)("span",{style:{opacity:"0.6"}}," boolean"),(0,a.kt)("div",{style:{marginTop:"var(--ifm-table-cell-padding)"}},(0,a.kt)("p",null,"Whether this user was blocked by an administrator (true) or not (false).")))),(0,a.kt)("tr",null,(0,a.kt)("td",null,(0,a.kt)("code",null,"email_verified"),(0,a.kt)("span",{style:{opacity:"0.6"}}," boolean"),(0,a.kt)("div",{style:{marginTop:"var(--ifm-table-cell-padding)"}},(0,a.kt)("p",null,"Whether this email address is verified (true) or unverified (false). User will receive a verification email after creation if ",(0,a.kt)("inlineCode",{parentName:"p"},"email_verified")," is false or not specified")))),(0,a.kt)("tr",null,(0,a.kt)("td",null,(0,a.kt)("code",null,"phone_verified"),(0,a.kt)("span",{style:{opacity:"0.6"}}," boolean"),(0,a.kt)("div",{style:{marginTop:"var(--ifm-table-cell-padding)"}},(0,a.kt)("p",null,"Whether this phone number has been verified (true) or not (false).")))),(0,a.kt)("tr",null,(0,a.kt)("td",null,(0,a.kt)("code",null,"app_metadata"),(0,a.kt)("span",{style:{opacity:"0.6"}}," object"),(0,a.kt)("div",{style:{marginTop:"var(--ifm-table-cell-padding)"}},(0,a.kt)("p",null,"Data related to the user that does affect the application's core functionality.")),(0,a.kt)("table",{style:{display:"table",width:"100%",marginTop:"var(--ifm-table-cell-padding)",marginBottom:"0px"}},(0,a.kt)("tbody",null,(0,a.kt)("tr",null,(0,a.kt)("td",null,(0,a.kt)("code",null,"clientID"),(0,a.kt)("span",{style:{opacity:"0.6"}}," "))),(0,a.kt)("tr",null,(0,a.kt)("td",null,(0,a.kt)("code",null,"globalClientID"),(0,a.kt)("span",{style:{opacity:"0.6"}}," "))),(0,a.kt)("tr",null,(0,a.kt)("td",null,(0,a.kt)("code",null,"global_client_id"),(0,a.kt)("span",{style:{opacity:"0.6"}}," "))),(0,a.kt)("tr",null,(0,a.kt)("td",null,(0,a.kt)("code",null,"email_verified"),(0,a.kt)("span",{style:{opacity:"0.6"}}," "))),(0,a.kt)("tr",null,(0,a.kt)("td",null,(0,a.kt)("code",null,"user_id"),(0,a.kt)("span",{style:{opacity:"0.6"}}," "))),(0,a.kt)("tr",null,(0,a.kt)("td",null,(0,a.kt)("code",null,"identities"),(0,a.kt)("span",{style:{opacity:"0.6"}}," "))),(0,a.kt)("tr",null,(0,a.kt)("td",null,(0,a.kt)("code",null,"lastIP"),(0,a.kt)("span",{style:{opacity:"0.6"}}," "))),(0,a.kt)("tr",null,(0,a.kt)("td",null,(0,a.kt)("code",null,"lastLogin"),(0,a.kt)("span",{style:{opacity:"0.6"}}," "))),(0,a.kt)("tr",null,(0,a.kt)("td",null,(0,a.kt)("code",null,"metadata"),(0,a.kt)("span",{style:{opacity:"0.6"}}," "))),(0,a.kt)("tr",null,(0,a.kt)("td",null,(0,a.kt)("code",null,"created_at"),(0,a.kt)("span",{style:{opacity:"0.6"}}," "))),(0,a.kt)("tr",null,(0,a.kt)("td",null,(0,a.kt)("code",null,"loginsCount"),(0,a.kt)("span",{style:{opacity:"0.6"}}," "))),(0,a.kt)("tr",null,(0,a.kt)("td",null,(0,a.kt)("code",null,"_id"),(0,a.kt)("span",{style:{opacity:"0.6"}}," "))),(0,a.kt)("tr",null,(0,a.kt)("td",null,(0,a.kt)("code",null,"email"),(0,a.kt)("span",{style:{opacity:"0.6"}}," "))),(0,a.kt)("tr",null,(0,a.kt)("td",null,(0,a.kt)("code",null,"blocked"),(0,a.kt)("span",{style:{opacity:"0.6"}}," "))),(0,a.kt)("tr",null,(0,a.kt)("td",null,(0,a.kt)("code",null,"__tenant"),(0,a.kt)("span",{style:{opacity:"0.6"}}," "))),(0,a.kt)("tr",null,(0,a.kt)("td",null,(0,a.kt)("code",null,"updated_at"),(0,a.kt)("span",{style:{opacity:"0.6"}}," "))))))),(0,a.kt)("tr",null,(0,a.kt)("td",null,(0,a.kt)("code",null,"given_name"),(0,a.kt)("span",{style:{opacity:"0.6"}}," string"),(0,a.kt)("div",{style:{marginTop:"var(--ifm-table-cell-padding)"}},(0,a.kt)("p",null,(0,a.kt)("strong",{parentName:"p"},"Possible values:")," 1 \u2264 length \u2264 150")),(0,a.kt)("div",{style:{marginTop:"var(--ifm-table-cell-padding)"}},(0,a.kt)("p",null,"The user's given name(s).")))),(0,a.kt)("tr",null,(0,a.kt)("td",null,(0,a.kt)("code",null,"family_name"),(0,a.kt)("span",{style:{opacity:"0.6"}}," string"),(0,a.kt)("div",{style:{marginTop:"var(--ifm-table-cell-padding)"}},(0,a.kt)("p",null,(0,a.kt)("strong",{parentName:"p"},"Possible values:")," 1 \u2264 length \u2264 150")),(0,a.kt)("div",{style:{marginTop:"var(--ifm-table-cell-padding)"}},(0,a.kt)("p",null,"The user's family name(s).")))),(0,a.kt)("tr",null,(0,a.kt)("td",null,(0,a.kt)("code",null,"name"),(0,a.kt)("span",{style:{opacity:"0.6"}}," string"),(0,a.kt)("div",{style:{marginTop:"var(--ifm-table-cell-padding)"}},(0,a.kt)("p",null,(0,a.kt)("strong",{parentName:"p"},"Possible values:")," 1 \u2264 length \u2264 300")),(0,a.kt)("div",{style:{marginTop:"var(--ifm-table-cell-padding)"}},(0,a.kt)("p",null,"The user's full name.")))),(0,a.kt)("tr",null,(0,a.kt)("td",null,(0,a.kt)("code",null,"nickname"),(0,a.kt)("span",{style:{opacity:"0.6"}}," string"),(0,a.kt)("div",{style:{marginTop:"var(--ifm-table-cell-padding)"}},(0,a.kt)("p",null,(0,a.kt)("strong",{parentName:"p"},"Possible values:")," 1 \u2264 length \u2264 300")),(0,a.kt)("div",{style:{marginTop:"var(--ifm-table-cell-padding)"}},(0,a.kt)("p",null,"The user's nickname.")))),(0,a.kt)("tr",null,(0,a.kt)("td",null,(0,a.kt)("code",null,"picture"),(0,a.kt)("span",{style:{opacity:"0.6"}}," string"),(0,a.kt)("div",{style:{marginTop:"var(--ifm-table-cell-padding)"}},(0,a.kt)("p",null,"A URI pointing to the user's picture.")))),(0,a.kt)("tr",null,(0,a.kt)("td",null,(0,a.kt)("code",null,"user_id"),(0,a.kt)("span",{style:{opacity:"0.6"}}," string"),(0,a.kt)("div",{style:{marginTop:"var(--ifm-table-cell-padding)"}},(0,a.kt)("p",null,(0,a.kt)("strong",{parentName:"p"},"Possible values:")," length \u2264 255")),(0,a.kt)("div",{style:{marginTop:"var(--ifm-table-cell-padding)"}},(0,a.kt)("p",null,"The external user's id provided by the identity provider.")))),(0,a.kt)("tr",null,(0,a.kt)("td",null,(0,a.kt)("code",null,"connection"),(0,a.kt)("span",{style:{opacity:"0.6"}}," string"),(0,a.kt)("span",{style:{opacity:"0.6"}}," \u2014 "),(0,a.kt)("strong",{style:{fontSize:"var(--ifm-code-font-size)",color:"var(--openapi-required)"}}," REQUIRED"),(0,a.kt)("div",{style:{marginTop:"var(--ifm-table-cell-padding)"}},(0,a.kt)("p",null,(0,a.kt)("strong",{parentName:"p"},"Possible values:")," 1 \u2264 length")),(0,a.kt)("div",{style:{marginTop:"var(--ifm-table-cell-padding)"}},(0,a.kt)("p",null,"Name of the connection this user should be created in.")))),(0,a.kt)("tr",null,(0,a.kt)("td",null,(0,a.kt)("code",null,"password"),(0,a.kt)("span",{style:{opacity:"0.6"}}," string"),(0,a.kt)("div",{style:{marginTop:"var(--ifm-table-cell-padding)"}},(0,a.kt)("p",null,(0,a.kt)("strong",{parentName:"p"},"Possible values:")," 1 \u2264 length")),(0,a.kt)("div",{style:{marginTop:"var(--ifm-table-cell-padding)"}},(0,a.kt)("p",null,"Initial password for this user (mandatory only for auth0 connection strategy).")))),(0,a.kt)("tr",null,(0,a.kt)("td",null,(0,a.kt)("code",null,"verify_email"),(0,a.kt)("span",{style:{opacity:"0.6"}}," boolean"),(0,a.kt)("div",{style:{marginTop:"var(--ifm-table-cell-padding)"}},(0,a.kt)("p",null,"Whether the user will receive a verification email after creation (true) or no email (false). Overrides behavior of ",(0,a.kt)("inlineCode",{parentName:"p"},"email_verified")," parameter.")))),(0,a.kt)("tr",null,(0,a.kt)("td",null,(0,a.kt)("code",null,"username"),(0,a.kt)("span",{style:{opacity:"0.6"}}," string"),(0,a.kt)("div",{style:{marginTop:"var(--ifm-table-cell-padding)"}},(0,a.kt)("p",null,(0,a.kt)("strong",{parentName:"p"},"Possible values:")," 1 \u2264 length \u2264 128")),(0,a.kt)("div",{style:{marginTop:"var(--ifm-table-cell-padding)"}},(0,a.kt)("p",null,"The user's username. Only valid if the connection requires a username.")))))),(0,a.kt)("table",{style:{display:"table",width:"100%"}},(0,a.kt)("thead",null,(0,a.kt)("tr",null,(0,a.kt)("th",{style:{textAlign:"left"}},"Responses"))),(0,a.kt)("tbody",null,(0,a.kt)("tr",null,(0,a.kt)("td",null,(0,a.kt)("div",{style:{display:"flex"}},(0,a.kt)("div",{style:{marginRight:"var(--ifm-table-cell-padding)"}},(0,a.kt)("code",null,"201")),(0,a.kt)("div",null,(0,a.kt)("p",null,"User successfully created."))),(0,a.kt)("div",null,(0,a.kt)("table",{style:{display:"table",width:"100%",marginTop:"var(--ifm-table-cell-padding)",marginBottom:"0px"}},(0,a.kt)("thead",null,(0,a.kt)("tr",null,(0,a.kt)("th",{style:{textAlign:"left"}},"Schema ",(0,a.kt)("div",null)))),(0,a.kt)("tbody",null,(0,a.kt)("tr",null,(0,a.kt)("td",null,(0,a.kt)("code",null,"user_id"),(0,a.kt)("span",{style:{opacity:"0.6"}}," string"),(0,a.kt)("div",{style:{marginTop:"var(--ifm-table-cell-padding)"}},(0,a.kt)("p",null,"ID of the user which can be used when interacting with other APIs.")))),(0,a.kt)("tr",null,(0,a.kt)("td",null,(0,a.kt)("code",null,"email"),(0,a.kt)("span",{style:{opacity:"0.6"}}," string"),(0,a.kt)("div",{style:{marginTop:"var(--ifm-table-cell-padding)"}},(0,a.kt)("p",null,"Email address of this user.")))),(0,a.kt)("tr",null,(0,a.kt)("td",null,(0,a.kt)("code",null,"email_verified"),(0,a.kt)("span",{style:{opacity:"0.6"}}," boolean"),(0,a.kt)("div",{style:{marginTop:"var(--ifm-table-cell-padding)"}},(0,a.kt)("p",null,"Whether this email address is verified (true) or unverified (false).")))),(0,a.kt)("tr",null,(0,a.kt)("td",null,(0,a.kt)("code",null,"username"),(0,a.kt)("span",{style:{opacity:"0.6"}}," string"),(0,a.kt)("div",{style:{marginTop:"var(--ifm-table-cell-padding)"}},(0,a.kt)("p",null,"Username of this user.")))),(0,a.kt)("tr",null,(0,a.kt)("td",null,(0,a.kt)("code",null,"phone_number"),(0,a.kt)("span",{style:{opacity:"0.6"}}," string"),(0,a.kt)("div",{style:{marginTop:"var(--ifm-table-cell-padding)"}},(0,a.kt)("p",null,"Phone number for this user when using SMS connections. Follows the ",(0,a.kt)("a",{href:"https://en.wikipedia.org/wiki/E.164"},"E.164 recommendation"),".")))),(0,a.kt)("tr",null,(0,a.kt)("td",null,(0,a.kt)("code",null,"phone_verified"),(0,a.kt)("span",{style:{opacity:"0.6"}}," boolean"),(0,a.kt)("div",{style:{marginTop:"var(--ifm-table-cell-padding)"}},(0,a.kt)("p",null,"Whether this phone number has been verified (true) or not (false).")))),(0,a.kt)("tr",null,(0,a.kt)("td",null,(0,a.kt)("code",null,"created_at"),(0,a.kt)("span",{style:{opacity:"0.6"}}," "))),(0,a.kt)("tr",null,(0,a.kt)("td",null,(0,a.kt)("code",null,"updated_at"),(0,a.kt)("span",{style:{opacity:"0.6"}}," "))),(0,a.kt)("tr",null,(0,a.kt)("td",null,(0,a.kt)("code",null,"identities"),(0,a.kt)("span",{style:{opacity:"0.6"}}," object[]"),(0,a.kt)("div",{style:{marginTop:"var(--ifm-table-cell-padding)"}},(0,a.kt)("p",null,"Array of user identity objects when accounts are linked.")),(0,a.kt)("table",{style:{display:"table",width:"100%",marginTop:"var(--ifm-table-cell-padding)",marginBottom:"0px"}},(0,a.kt)("tbody",null,(0,a.kt)("tr",null,(0,a.kt)("td",null,(0,a.kt)("code",null,"connection"),(0,a.kt)("span",{style:{opacity:"0.6"}}," string"),(0,a.kt)("div",{style:{marginTop:"var(--ifm-table-cell-padding)"}},(0,a.kt)("p",null,"Name of the connection containing this identity.")))),(0,a.kt)("tr",null,(0,a.kt)("td",null,(0,a.kt)("code",null,"user_id"),(0,a.kt)("span",{style:{opacity:"0.6"}}," string"),(0,a.kt)("div",{style:{marginTop:"var(--ifm-table-cell-padding)"}},(0,a.kt)("p",null,"Unique identifier of the user user for this identity.")))),(0,a.kt)("tr",null,(0,a.kt)("td",null,(0,a.kt)("code",null,"provider"),(0,a.kt)("span",{style:{opacity:"0.6"}}," string"),(0,a.kt)("div",{style:{marginTop:"var(--ifm-table-cell-padding)"}},(0,a.kt)("p",null,"The type of identity provider")))),(0,a.kt)("tr",null,(0,a.kt)("td",null,(0,a.kt)("code",null,"isSocial"),(0,a.kt)("span",{style:{opacity:"0.6"}}," boolean"),(0,a.kt)("div",{style:{marginTop:"var(--ifm-table-cell-padding)"}},(0,a.kt)("p",null,"Whether this identity is from a social provider (true) or not (false).")))),(0,a.kt)("tr",null,(0,a.kt)("td",null,(0,a.kt)("code",null,"access_token"),(0,a.kt)("span",{style:{opacity:"0.6"}}," string"),(0,a.kt)("div",{style:{marginTop:"var(--ifm-table-cell-padding)"}},(0,a.kt)("p",null,"IDP access token returned only if scope read:user_idp_tokens is defined.")))),(0,a.kt)("tr",null,(0,a.kt)("td",null,(0,a.kt)("code",null,"access_token_secret"),(0,a.kt)("span",{style:{opacity:"0.6"}}," string"),(0,a.kt)("div",{style:{marginTop:"var(--ifm-table-cell-padding)"}},(0,a.kt)("p",null,"IDP access token secret returned only if scope read:user_idp_tokens is defined.")))),(0,a.kt)("tr",null,(0,a.kt)("td",null,(0,a.kt)("code",null,"refresh_token"),(0,a.kt)("span",{style:{opacity:"0.6"}}," string"),(0,a.kt)("div",{style:{marginTop:"var(--ifm-table-cell-padding)"}},(0,a.kt)("p",null,"IDP refresh token returned only if scope read:user_idp_tokens is defined.")))),(0,a.kt)("tr",null,(0,a.kt)("td",null,(0,a.kt)("code",null,"profileData"),(0,a.kt)("span",{style:{opacity:"0.6"}}," object"),(0,a.kt)("table",{style:{display:"table",width:"100%",marginTop:"var(--ifm-table-cell-padding)",marginBottom:"0px"}},(0,a.kt)("tbody",null,(0,a.kt)("tr",null,(0,a.kt)("td",null,(0,a.kt)("code",null,"email"),(0,a.kt)("span",{style:{opacity:"0.6"}}," string"),(0,a.kt)("div",{style:{marginTop:"var(--ifm-table-cell-padding)"}},(0,a.kt)("p",null,"Email address of this user.")))),(0,a.kt)("tr",null,(0,a.kt)("td",null,(0,a.kt)("code",null,"email_verified"),(0,a.kt)("span",{style:{opacity:"0.6"}}," boolean"),(0,a.kt)("div",{style:{marginTop:"var(--ifm-table-cell-padding)"}},(0,a.kt)("p",null,"Whether this email address is verified (true) or unverified (false).")))),(0,a.kt)("tr",null,(0,a.kt)("td",null,(0,a.kt)("code",null,"name"),(0,a.kt)("span",{style:{opacity:"0.6"}}," string"),(0,a.kt)("div",{style:{marginTop:"var(--ifm-table-cell-padding)"}},(0,a.kt)("p",null,"Name of this user.")))),(0,a.kt)("tr",null,(0,a.kt)("td",null,(0,a.kt)("code",null,"username"),(0,a.kt)("span",{style:{opacity:"0.6"}}," string"),(0,a.kt)("div",{style:{marginTop:"var(--ifm-table-cell-padding)"}},(0,a.kt)("p",null,"Username of this user.")))),(0,a.kt)("tr",null,(0,a.kt)("td",null,(0,a.kt)("code",null,"given_name"),(0,a.kt)("span",{style:{opacity:"0.6"}}," string"),(0,a.kt)("div",{style:{marginTop:"var(--ifm-table-cell-padding)"}},(0,a.kt)("p",null,"Given name/first name/forename of this user.")))),(0,a.kt)("tr",null,(0,a.kt)("td",null,(0,a.kt)("code",null,"phone_number"),(0,a.kt)("span",{style:{opacity:"0.6"}}," string"),(0,a.kt)("div",{style:{marginTop:"var(--ifm-table-cell-padding)"}},(0,a.kt)("p",null,"Phone number for this user.")))),(0,a.kt)("tr",null,(0,a.kt)("td",null,(0,a.kt)("code",null,"phone_verified"),(0,a.kt)("span",{style:{opacity:"0.6"}}," boolean"),(0,a.kt)("div",{style:{marginTop:"var(--ifm-table-cell-padding)"}},(0,a.kt)("p",null,"Whether this phone number is verified (true) or unverified (false).")))),(0,a.kt)("tr",null,(0,a.kt)("td",null,(0,a.kt)("code",null,"family_name"),(0,a.kt)("span",{style:{opacity:"0.6"}}," string"),(0,a.kt)("div",{style:{marginTop:"var(--ifm-table-cell-padding)"}},(0,a.kt)("p",null,"Family name/last name/surname of this user.")))))))))))),(0,a.kt)("tr",null,(0,a.kt)("td",null,(0,a.kt)("code",null,"app_metadata"),(0,a.kt)("span",{style:{opacity:"0.6"}}," object"),(0,a.kt)("div",{style:{marginTop:"var(--ifm-table-cell-padding)"}},(0,a.kt)("p",null,"User metadata to which this user has read-only access.")))),(0,a.kt)("tr",null,(0,a.kt)("td",null,(0,a.kt)("code",null,"user_metadata"),(0,a.kt)("span",{style:{opacity:"0.6"}}," object"),(0,a.kt)("div",{style:{marginTop:"var(--ifm-table-cell-padding)"}},(0,a.kt)("p",null,"User metadata to which this user has read/write access.")))),(0,a.kt)("tr",null,(0,a.kt)("td",null,(0,a.kt)("code",null,"picture"),(0,a.kt)("span",{style:{opacity:"0.6"}}," string"),(0,a.kt)("div",{style:{marginTop:"var(--ifm-table-cell-padding)"}},(0,a.kt)("p",null,"URL to picture, photo, or avatar of this user.")))),(0,a.kt)("tr",null,(0,a.kt)("td",null,(0,a.kt)("code",null,"name"),(0,a.kt)("span",{style:{opacity:"0.6"}}," string"),(0,a.kt)("div",{style:{marginTop:"var(--ifm-table-cell-padding)"}},(0,a.kt)("p",null,"Name of this user.")))),(0,a.kt)("tr",null,(0,a.kt)("td",null,(0,a.kt)("code",null,"nickname"),(0,a.kt)("span",{style:{opacity:"0.6"}}," string"),(0,a.kt)("div",{style:{marginTop:"var(--ifm-table-cell-padding)"}},(0,a.kt)("p",null,"Preferred nickname or alias of this user.")))),(0,a.kt)("tr",null,(0,a.kt)("td",null,(0,a.kt)("code",null,"multifactor"),(0,a.kt)("span",{style:{opacity:"0.6"}}," string[]"),(0,a.kt)("div",{style:{marginTop:"var(--ifm-table-cell-padding)"}},(0,a.kt)("p",null,"List of multi-factor authentication providers with which this user has enrolled.")))),(0,a.kt)("tr",null,(0,a.kt)("td",null,(0,a.kt)("code",null,"last_ip"),(0,a.kt)("span",{style:{opacity:"0.6"}}," string"),(0,a.kt)("div",{style:{marginTop:"var(--ifm-table-cell-padding)"}},(0,a.kt)("p",null,"Last IP address from which this user logged in.")))),(0,a.kt)("tr",null,(0,a.kt)("td",null,(0,a.kt)("code",null,"last_login"),(0,a.kt)("span",{style:{opacity:"0.6"}}," "))),(0,a.kt)("tr",null,(0,a.kt)("td",null,(0,a.kt)("code",null,"logins_count"),(0,a.kt)("span",{style:{opacity:"0.6"}}," integer"),(0,a.kt)("div",{style:{marginTop:"var(--ifm-table-cell-padding)"}},(0,a.kt)("p",null,"Total number of logins this user has performed.")))),(0,a.kt)("tr",null,(0,a.kt)("td",null,(0,a.kt)("code",null,"blocked"),(0,a.kt)("span",{style:{opacity:"0.6"}}," boolean"),(0,a.kt)("div",{style:{marginTop:"var(--ifm-table-cell-padding)"}},(0,a.kt)("p",null,"Whether this user was blocked by an administrator (true) or is not (false).")))),(0,a.kt)("tr",null,(0,a.kt)("td",null,(0,a.kt)("code",null,"given_name"),(0,a.kt)("span",{style:{opacity:"0.6"}}," string"),(0,a.kt)("div",{style:{marginTop:"var(--ifm-table-cell-padding)"}},(0,a.kt)("p",null,"Given name/first name/forename of this user.")))),(0,a.kt)("tr",null,(0,a.kt)("td",null,(0,a.kt)("code",null,"family_name"),(0,a.kt)("span",{style:{opacity:"0.6"}}," string"),(0,a.kt)("div",{style:{marginTop:"var(--ifm-table-cell-padding)"}},(0,a.kt)("p",null,"Family name/last name/surname of this user."))))))))),(0,a.kt)("tr",null,(0,a.kt)("td",null,(0,a.kt)("div",{style:{display:"flex"}},(0,a.kt)("div",{style:{marginRight:"var(--ifm-table-cell-padding)"}},(0,a.kt)("code",null,"400")),(0,a.kt)("div",null,(0,a.kt)("p",null,"Connection is disabled."))),(0,a.kt)("div",null))),(0,a.kt)("tr",null,(0,a.kt)("td",null,(0,a.kt)("div",{style:{display:"flex"}},(0,a.kt)("div",{style:{marginRight:"var(--ifm-table-cell-padding)"}},(0,a.kt)("code",null,"401")),(0,a.kt)("div",null,(0,a.kt)("p",null,"Invalid signature received for JSON Web Token validation."))),(0,a.kt)("div",null))),(0,a.kt)("tr",null,(0,a.kt)("td",null,(0,a.kt)("div",{style:{display:"flex"}},(0,a.kt)("div",{style:{marginRight:"var(--ifm-table-cell-padding)"}},(0,a.kt)("code",null,"403")),(0,a.kt)("div",null,(0,a.kt)("p",null,"Insufficient scope, expected any of: create:users."))),(0,a.kt)("div",null))),(0,a.kt)("tr",null,(0,a.kt)("td",null,(0,a.kt)("div",{style:{display:"flex"}},(0,a.kt)("div",{style:{marginRight:"var(--ifm-table-cell-padding)"}},(0,a.kt)("code",null,"409")),(0,a.kt)("div",null,(0,a.kt)("p",null,"User already exists."))),(0,a.kt)("div",null))),(0,a.kt)("tr",null,(0,a.kt)("td",null,(0,a.kt)("div",{style:{display:"flex"}},(0,a.kt)("div",{style:{marginRight:"var(--ifm-table-cell-padding)"}},(0,a.kt)("code",null,"429")),(0,a.kt)("div",null,(0,a.kt)("p",null,"Too many requests. Check the X-RateLimit-Limit, X-RateLimit-Remaining and X-RateLimit-Reset headers."))),(0,a.kt)("div",null))))))}p.isMDXComponent=!0}}]);