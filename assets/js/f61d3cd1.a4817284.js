"use strict";(self.webpackChunkmy_website=self.webpackChunkmy_website||[]).push([[3971],{3905:(e,t,i)=>{i.d(t,{Zo:()=>c,kt:()=>m});var n=i(67294);function r(e,t,i){return t in e?Object.defineProperty(e,t,{value:i,enumerable:!0,configurable:!0,writable:!0}):e[t]=i,e}function a(e,t){var i=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),i.push.apply(i,n)}return i}function o(e){for(var t=1;t<arguments.length;t++){var i=null!=arguments[t]?arguments[t]:{};t%2?a(Object(i),!0).forEach((function(t){r(e,t,i[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(i)):a(Object(i)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(i,t))}))}return e}function l(e,t){if(null==e)return{};var i,n,r=function(e,t){if(null==e)return{};var i,n,r={},a=Object.keys(e);for(n=0;n<a.length;n++)i=a[n],t.indexOf(i)>=0||(r[i]=e[i]);return r}(e,t);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(n=0;n<a.length;n++)i=a[n],t.indexOf(i)>=0||Object.prototype.propertyIsEnumerable.call(e,i)&&(r[i]=e[i])}return r}var s=n.createContext({}),d=function(e){var t=n.useContext(s),i=t;return e&&(i="function"==typeof e?e(t):o(o({},t),e)),i},c=function(e){var t=d(e.components);return n.createElement(s.Provider,{value:t},e.children)},p={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},u=n.forwardRef((function(e,t){var i=e.components,r=e.mdxType,a=e.originalType,s=e.parentName,c=l(e,["components","mdxType","originalType","parentName"]),u=d(i),m=r,g=u["".concat(s,".").concat(m)]||u[m]||p[m]||a;return i?n.createElement(g,o(o({ref:t},c),{},{components:i})):n.createElement(g,o({ref:t},c))}));function m(e,t){var i=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var a=i.length,o=new Array(a);o[0]=u;var l={};for(var s in t)hasOwnProperty.call(t,s)&&(l[s]=t[s]);l.originalType=e,l.mdxType="string"==typeof e?e:r,o[1]=l;for(var d=2;d<a;d++)o[d]=i[d];return n.createElement.apply(null,o)}return n.createElement.apply(null,i)}u.displayName="MDXCreateElement"},62837:(e,t,i)=>{i.r(t),i.d(t,{contentTitle:()=>o,default:()=>c,frontMatter:()=>a,metadata:()=>l,toc:()=>s});var n=i(87462),r=(i(67294),i(3905));const a={},o="Update the email provider",l={type:"api",id:"update-the-email-provider",unversionedId:"update-the-email-provider",title:"Update the email provider",description:"",slug:"/update-the-email-provider",frontMatter:{},api:{description:'Update an <a href="https://auth0.com/docs/email/providers">email provider</a>.\\nThe <code>credentials</code> object requires different properties depending on the email provider (which is specified using the <code>name</code> property):\\n<ul><li><code>mandrill</code> requires <code>api_key</code></li><li><code>sendgrid</code> requires <code>api_key</code></li><li><code>sparkpost</code> requires <code>api_key</code>. Optionally, set <code>region</code> to <code>eu</code> to use the SparkPost service hosted in Western Europe; set to <code>null</code> to use the SparkPost service hosted in North America. <code>eu</code> or <code>null</code> are the only valid values for <code>region</code>.</li><li><code>mailgun</code> requires <code>api_key</code> and <code>domain</code>. Optionally, set <code>region</code> to <code>eu</code> to use the Mailgun service hosted in Europe; set to <code>null</code> otherwise. <code>eu</code> or <code>null</code> are the only valid values for <code>region</code>.</li><li><code>ses</code> requires <code>accessKeyId</code>, <code>secretAccessKey</code>, and <code>region</code></li><li><code>smtp</code> requires <code>smtp_host</code>, <code>smtp_port</code>, <code>smtp_user</code>, and <code>smtp_pass</code></li></ul>Depending on the type of provider it is possible to specify <code>settings</code> object with different configuration options, which will be used when sending an email:\\n<ul><li><code>smtp</code> provider, <code>settings</code> may contain <code>headers</code> object. When using AWS SES SMTP host, you may provide a name of configuration set in <code>X-SES-Configuration-Set</code> header. Value must be a string.</li><li>for <code>ses</code> provider, <code>settings</code> may contain <code>message</code> object, where you can provide a name of configuration set in <code>configuration_set_name</code> property. Value must be a string.</li></ul>\\n',tags:["emails"],requestBody:{content:{"application/json":{schema:{type:"object",properties:{name:{type:"string",description:"Name of the email provider. Can be `mailgun`, `mandrill`, `sendgrid`, `ses`, `sparkpost`, or `smtp`.",enum:["mailgun","mandrill","sendgrid","ses","sparkpost","smtp"]},enabled:{type:"boolean",description:"Whether the provider is enabled (true) or disabled (false)."},default_from_address:{type:"string",description:'Email address to use as "from" when no other address specified.'},credentials:{description:"Credentials required to use the provider.",anyOf:[{},{},{},{},{}]},settings:{type:"object",nullable:!0,description:"Specific provider setting",additionalProperties:{}}}}},"application/x-www-form-urlencoded":{schema:{type:"object",properties:{name:{type:"string",description:"Name of the email provider. Can be `mailgun`, `mandrill`, `sendgrid`, `ses`, `sparkpost`, or `smtp`.",enum:["mailgun","mandrill","sendgrid","ses","sparkpost","smtp"]},enabled:{type:"boolean",description:"Whether the provider is enabled (true) or disabled (false)."},default_from_address:{type:"string",description:'Email address to use as "from" when no other address specified.'},credentials:{description:"Credentials required to use the provider.",anyOf:[{},{},{},{},{}]},settings:{type:"object",nullable:!0,description:"Specific provider setting",additionalProperties:{}}}}}}},responses:{200:{description:"Email provider successfully updated.",content:{"application/json":{schema:{type:"object",properties:{name:{type:"string",description:"Name of the email provider. Can be `mailgun`, `mandrill`, `sendgrid`, `ses`, `sparkpost`, or `smtp`.",default:"sendgrid"},enabled:{type:"boolean",description:"Whether the provider is enabled (true) or disabled (false).",default:!0},default_from_address:{type:"string",description:'Email address to use as "from" when no other address specified.'},credentials:{type:"object",description:"Credentials required to use the provider.",properties:{api_user:{type:"string",description:"API User."},region:{type:"string",description:"AWS or SparkPost region."},smtp_host:{type:"string",description:"SMTP host."},smtp_port:{type:"integer",description:"SMTP port."},smtp_user:{type:"string",description:"SMTP username."}}},settings:{type:"object",description:"Specific provider setting",additionalProperties:{}}}}}}},400:{description:"Invalid request body. The message will vary depending on the cause."},401:{description:"Invalid signature received for JSON Web Token validation."},403:{description:"Insufficient scope; expected any of: update:email_provider."},404:{description:"Email provider has not been configured."},429:{description:"Too many requests. Check the X-RateLimit-Limit, X-RateLimit-Remaining and X-RateLimit-Reset headers."}},operationId:"patch_provider",security:[{bearerAuth:[]},{oAuth2ClientCredentials:["update:email_provider"]}],method:"patch",path:"/emails/provider",servers:[{url:"https://login0.local.dev.auth0.com/api/v2"}],securitySchemes:{bearerAuth:{type:"http",scheme:"bearer",bearerFormat:"jwt"},oAuth2ClientCredentials:{type:"oauth2",flows:{clientCredentials:{tokenUrl:"https://login0.local.dev.auth0.com/oauth/token/","x-form-parameters":{audience:"https://login0.local.dev.auth0.com/api/v2/"},scopes:{"delete:actions":"Delete Actions","read:actions":"Read Actions","update:actions":"Update Actions","create:actions":"Create Actions","delete:anomaly_blocks":"Delete Anomaly Detection Blocks","read:anomaly_blocks":"Read Anomaly Detection Blocks","read:attack_protection":"Read attack protection","update:attack_protection":"Update attack protection","blacklist:tokens":"Blacklist Tokens","read:branding":"Read branding settings","update:branding":"Update branding settings","delete:branding":"Delete branding settings","delete:client_grants":"Delete Client Grants","read:client_grants":"Read Client Grants","update:client_grants":"Update Client Grants","create:client_grants":"Create Client Grants","delete:clients":"Delete Clients","read:clients":"Read Clients","update:clients":"Update Clients","create:clients":"Create Clients","delete:client_credentials":"Delete Client Credentials","read:client_credentials":"Read Client Credentials","update:client_credentials":"Update Client Credentials","create:client_credentials":"Create Client Credentials","delete:client_keys":"Delete Client Keys","read:client_keys":"Read Client Keys","update:client_keys":"Update Client Keys","create:client_keys":"Create Client Keys","delete:connections":"Delete Connections","read:connections":"Read Connections","update:connections":"Update Connections","create:connections":"Create Connections","delete:custom_domains":"Delete custom domain configurations","read:custom_domains":"Read custom domain configurations","update:custom_domains":"Update custom domain configurations","create:custom_domains":"Configure new custom domains","update:device_codes":"Update Device Codes","read:device_codes":"Read Device Codes","delete:device_credentials":"Delete Device Credentials","read:device_credentials":"Read Device Credentials","update:device_credentials":"Update Device Credentials","create:device_credentials":"Create Device Credentials","delete:current_user_device_credentials":"Delete Current User Device Credentials","read:current_user_device_credentials":"Read Current User Device Credentials","create:current_user_device_credentials":"Create Current User Device Credentials","delete:email_templates":"Delete email templates","read:email_templates":"Read email emplates","update:email_templates":"Update email templates","create:email_templates":"Create email templates","read:email_triggers":"Read email triggers","update:email_triggers":"Update email triggers","delete:email_provider":"Delete Email Provider","read:email_provider":"Read Email Provider","update:email_provider":"Update Email Provider","create:email_provider":"Create Email Provider","read:entitlements":"Read entitlements","delete:guardian_enrollments":"Delete Guardian enrollments","read:guardian_enrollments":"Read Guardian enrollments","create:guardian_enrollment_tickets":"Create enrollment tickets for Guardian","read:guardian_factors":"Read Guardian factors configuration","update:guardian_factors":"Update Guardian factors","read:grants":"Read User Grants","delete:grants":"Delete User Grants","delete:hooks":"Delete Hooks","read:hooks":"Read Hooks","update:hooks":"Update Hooks","create:hooks":"Create Hooks","read:insights":"Read Insights","delete:integrations":"Delete integrations","read:integrations":"Read integrations","update:integrations":"Update integrations","create:integrations":"Create integrations","read:limits":"Read entity limits","update:limits":"Update entity limits","read:log_streams":"Read log_streams","delete:log_streams":"Delete log_streams","update:log_streams":"Update log_streams","create:log_streams":"Create log_streams","read:logs":"Read Logs","read:logs_users":"Read logs relating to users","read:mfa_policies":"Read Multifactor Authentication policies","update:mfa_policies":"Update Multifactor Authentication policies","delete:organization_connections":"Delete organization connections","read:organization_connections":"Read organization connections","update:organization_connections":"Update organization connections","create:organization_connections":"Create organization connections","delete:organization_invitations":"Delete organization invitations","read:organization_invitations":"Read organization invitations","create:organization_invitations":"Create organization invitations","delete:organization_member_roles":"Delete organization member roles","read:organization_member_roles":"Read organization member roles","create:organization_member_roles":"Create organization member roles","delete:organizations":"Delete organizations","read:organizations":"Read organizations","create:organizations":"Create organizations","update:organizations":"Update organizations","delete:organization_members":"Delete organization members","read:organization_members":"Read organization members","create:organization_members":"Create organization members","read:organizations_summary":"Read organization summary","create:passwords_checking_job":"Create password checking jobs","delete:passwords_checking_job":"Deletes password checking job and all its resources","read:prompts":"Read prompts settings","update:prompts":"Update prompts settings","delete:requested_scopes":"Delete Requested Scopes","read:requested_scopes":"Read Requested Scopes","update:requested_scopes":"Update Requested Scopes","create:requested_scopes":"Create Requested Scopes","delete:resource_servers":"Delete Resource Servers","read:resource_servers":"Read Resource Servers","update:resource_servers":"Update Resource Servers","create:resource_servers":"Create Resource Servers","create:role_members":"Create role members","read:role_members":"Read role members","update:role_members":"Update role members","delete:role_members":"Delete role members","delete:roles":"Delete roles","read:roles":"Read roles","update:roles":"Update roles","create:roles":"Create roles","delete:rules":"Delete Rules","read:rules":"Read Rules","update:rules":"Update Rules","create:rules":"Create Rules","delete:rules_configs":"Delete Rules Configs","read:rules_configs":"Read Rules Configs","update:rules_configs":"Update Rules Configs","delete:signing_keys":"Delete signing keys","create:signing_keys":"Create signing keys","read:signing_keys":"Read signing keys","update:signing_keys":"Update signing keys","delete:shields":"Delete Shields","read:shields":"Read Shields","update:shields":"Update Shields","create:shields":"Create Shields","read:stats":"Read Stats","create:test_email_dispatch":"Create test email dispatch","read:tenant_settings":"Read Tenant Settings","update:tenant_settings":"Update Tenant Settings","read:triggers":"Read Triggers","update:triggers":"Update Triggers","create:user_tickets":"Create User Tickets","delete:users":"Delete Users","read:users":"Read Users","update:users":"Update Users","create:users":"Create Users","read:current_user":"Read Current User","delete:current_user":"Delete Current User","read:user_idp_tokens":"Read Users IDP tokens","delete:users_app_metadata":"Delete Users App Metadata","read:users_app_metadata":"Read Users App Metadata","update:users_app_metadata":"Update Users App Metadata","create:users_app_metadata":"Create Users App Metadata","delete:user_custom_blocks":"Delete Custom User Blocks","read:user_custom_blocks":"Read Custom User Blocks","create:user_custom_blocks":"Create Custom User Blocks","update:current_user_identities":"Update Current User Identities"}}}}},jsonRequestBodyExample:{name:"mailgun",enabled:!0,default_from_address:"string",settings:{}},info:{title:"Auth0 Management API",description:"Auth0 Management API v2.",termsOfService:"https://auth0.com/web-terms/",version:"2.0"},postman:{name:"Update the email provider",description:{content:'Update an <a href="https://auth0.com/docs/email/providers">email provider</a>.\\nThe <code>credentials</code> object requires different properties depending on the email provider (which is specified using the <code>name</code> property):\\n<ul><li><code>mandrill</code> requires <code>api_key</code></li><li><code>sendgrid</code> requires <code>api_key</code></li><li><code>sparkpost</code> requires <code>api_key</code>. Optionally, set <code>region</code> to <code>eu</code> to use the SparkPost service hosted in Western Europe; set to <code>null</code> to use the SparkPost service hosted in North America. <code>eu</code> or <code>null</code> are the only valid values for <code>region</code>.</li><li><code>mailgun</code> requires <code>api_key</code> and <code>domain</code>. Optionally, set <code>region</code> to <code>eu</code> to use the Mailgun service hosted in Europe; set to <code>null</code> otherwise. <code>eu</code> or <code>null</code> are the only valid values for <code>region</code>.</li><li><code>ses</code> requires <code>accessKeyId</code>, <code>secretAccessKey</code>, and <code>region</code></li><li><code>smtp</code> requires <code>smtp_host</code>, <code>smtp_port</code>, <code>smtp_user</code>, and <code>smtp_pass</code></li></ul>Depending on the type of provider it is possible to specify <code>settings</code> object with different configuration options, which will be used when sending an email:\\n<ul><li><code>smtp</code> provider, <code>settings</code> may contain <code>headers</code> object. When using AWS SES SMTP host, you may provide a name of configuration set in <code>X-SES-Configuration-Set</code> header. Value must be a string.</li><li>for <code>ses</code> provider, <code>settings</code> may contain <code>message</code> object, where you can provide a name of configuration set in <code>configuration_set_name</code> property. Value must be a string.</li></ul>\\n',type:"text/plain"},url:{path:["emails","provider"],host:["{{baseUrl}}"],query:[],variable:[]},header:[{key:"Content-Type",value:"application/x-www-form-urlencoded"}],method:"PATCH",body:{mode:"urlencoded",urlencoded:[{description:{content:"Name of the email provider. Can be `mailgun`, `mandrill`, `sendgrid`, `ses`, `sparkpost`, or `smtp`. (This can only be one of mailgun,mandrill,sendgrid,ses,sparkpost,smtp)",type:"text/plain"},key:"name",value:"<string>"},{description:{content:"Whether the provider is enabled (true) or disabled (false).",type:"text/plain"},key:"enabled",value:"<boolean>"},{description:{content:'Email address to use as "from" when no other address specified.',type:"text/plain"},key:"default_from_address",value:"<string>"},{description:{content:"Credentials required to use the provider.",type:"text/plain"},key:"credentials",value:"schema type not provided"},{description:{content:"Specific provider setting",type:"text/plain"},key:"settings",value:"<object>"}]},auth:{type:"oauth2",oauth2:[]}}},source:"@site/openapi.json",sourceDirName:".",permalink:"/docusaurus-openapi-demo/api/update-the-email-provider",previous:{title:"Get the email provider",permalink:"/docusaurus-openapi-demo/api/get-the-email-provider"},next:{title:"Configure the email provider",permalink:"/docusaurus-openapi-demo/api/configure-the-email-provider"}},s=[],d={toc:s};function c(e){let{components:t,...i}=e;return(0,r.kt)("wrapper",(0,n.Z)({},d,i,{components:t,mdxType:"MDXLayout"}),(0,r.kt)("h1",{id:"update-the-email-provider"},"Update the email provider"),(0,r.kt)("p",null,"Update an ",(0,r.kt)("a",{href:"https://auth0.com/docs/email/providers"},"email provider"),".\\nThe ",(0,r.kt)("code",null,"credentials")," object requires different properties depending on the email provider (which is specified using the ",(0,r.kt)("code",null,"name")," property):\\n",(0,r.kt)("ul",null,(0,r.kt)("li",null,(0,r.kt)("code",null,"mandrill")," requires ",(0,r.kt)("code",null,"api_key")),(0,r.kt)("li",null,(0,r.kt)("code",null,"sendgrid")," requires ",(0,r.kt)("code",null,"api_key")),(0,r.kt)("li",null,(0,r.kt)("code",null,"sparkpost")," requires ",(0,r.kt)("code",null,"api_key"),". Optionally, set ",(0,r.kt)("code",null,"region")," to ",(0,r.kt)("code",null,"eu")," to use the SparkPost service hosted in Western Europe; set to ",(0,r.kt)("code",null,"null")," to use the SparkPost service hosted in North America. ",(0,r.kt)("code",null,"eu")," or ",(0,r.kt)("code",null,"null")," are the only valid values for ",(0,r.kt)("code",null,"region"),"."),(0,r.kt)("li",null,(0,r.kt)("code",null,"mailgun")," requires ",(0,r.kt)("code",null,"api_key")," and ",(0,r.kt)("code",null,"domain"),". Optionally, set ",(0,r.kt)("code",null,"region")," to ",(0,r.kt)("code",null,"eu")," to use the Mailgun service hosted in Europe; set to ",(0,r.kt)("code",null,"null")," otherwise. ",(0,r.kt)("code",null,"eu")," or ",(0,r.kt)("code",null,"null")," are the only valid values for ",(0,r.kt)("code",null,"region"),"."),(0,r.kt)("li",null,(0,r.kt)("code",null,"ses")," requires ",(0,r.kt)("code",null,"accessKeyId"),", ",(0,r.kt)("code",null,"secretAccessKey"),", and ",(0,r.kt)("code",null,"region")),(0,r.kt)("li",null,(0,r.kt)("code",null,"smtp")," requires ",(0,r.kt)("code",null,"smtp_host"),", ",(0,r.kt)("code",null,"smtp_port"),", ",(0,r.kt)("code",null,"smtp_user"),", and ",(0,r.kt)("code",null,"smtp_pass"))),"Depending on the type of provider it is possible to specify ",(0,r.kt)("code",null,"settings")," object with different configuration options, which will be used when sending an email:\\n",(0,r.kt)("ul",null,(0,r.kt)("li",null,(0,r.kt)("code",null,"smtp")," provider, ",(0,r.kt)("code",null,"settings")," may contain ",(0,r.kt)("code",null,"headers")," object. When using AWS SES SMTP host, you may provide a name of configuration set in ",(0,r.kt)("code",null,"X-SES-Configuration-Set")," header. Value must be a string."),(0,r.kt)("li",null,"for ",(0,r.kt)("code",null,"ses")," provider, ",(0,r.kt)("code",null,"settings")," may contain ",(0,r.kt)("code",null,"message")," object, where you can provide a name of configuration set in ",(0,r.kt)("code",null,"configuration_set_name")," property. Value must be a string.")),"\\n"),(0,r.kt)("table",{style:{display:"table",width:"100%"}},(0,r.kt)("thead",null,(0,r.kt)("tr",null,(0,r.kt)("th",{style:{textAlign:"left"}},"Request Body ",(0,r.kt)("div",null)))),(0,r.kt)("tbody",null,(0,r.kt)("tr",null,(0,r.kt)("td",null,(0,r.kt)("code",null,"name"),(0,r.kt)("span",{style:{opacity:"0.6"}}," string"),(0,r.kt)("div",{style:{marginTop:"var(--ifm-table-cell-padding)"}},(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"Possible values:")," ","[",(0,r.kt)("inlineCode",{parentName:"p"},"mailgun"),", ",(0,r.kt)("inlineCode",{parentName:"p"},"mandrill"),", ",(0,r.kt)("inlineCode",{parentName:"p"},"sendgrid"),", ",(0,r.kt)("inlineCode",{parentName:"p"},"ses"),", ",(0,r.kt)("inlineCode",{parentName:"p"},"sparkpost"),", ",(0,r.kt)("inlineCode",{parentName:"p"},"smtp"),"]")),(0,r.kt)("div",{style:{marginTop:"var(--ifm-table-cell-padding)"}},(0,r.kt)("p",null,"Name of the email provider. Can be ",(0,r.kt)("inlineCode",{parentName:"p"},"mailgun"),", ",(0,r.kt)("inlineCode",{parentName:"p"},"mandrill"),", ",(0,r.kt)("inlineCode",{parentName:"p"},"sendgrid"),", ",(0,r.kt)("inlineCode",{parentName:"p"},"ses"),", ",(0,r.kt)("inlineCode",{parentName:"p"},"sparkpost"),", or ",(0,r.kt)("inlineCode",{parentName:"p"},"smtp"),".")))),(0,r.kt)("tr",null,(0,r.kt)("td",null,(0,r.kt)("code",null,"enabled"),(0,r.kt)("span",{style:{opacity:"0.6"}}," boolean"),(0,r.kt)("div",{style:{marginTop:"var(--ifm-table-cell-padding)"}},(0,r.kt)("p",null,"Whether the provider is enabled (true) or disabled (false).")))),(0,r.kt)("tr",null,(0,r.kt)("td",null,(0,r.kt)("code",null,"default_from_address"),(0,r.kt)("span",{style:{opacity:"0.6"}}," string"),(0,r.kt)("div",{style:{marginTop:"var(--ifm-table-cell-padding)"}},(0,r.kt)("p",null,'Email address to use as "from" when no other address specified.')))),(0,r.kt)("tr",null,(0,r.kt)("td",null,(0,r.kt)("code",null,"credentials"),(0,r.kt)("span",{style:{opacity:"0.6"}}," "),(0,r.kt)("div",{style:{marginTop:"var(--ifm-table-cell-padding)"}},(0,r.kt)("p",null,"Credentials required to use the provider.")))),(0,r.kt)("tr",null,(0,r.kt)("td",null,(0,r.kt)("code",null,"settings"),(0,r.kt)("span",{style:{opacity:"0.6"}}," object"),(0,r.kt)("div",{style:{marginTop:"var(--ifm-table-cell-padding)"}},(0,r.kt)("p",null,"Specific provider setting")))))),(0,r.kt)("table",{style:{display:"table",width:"100%"}},(0,r.kt)("thead",null,(0,r.kt)("tr",null,(0,r.kt)("th",{style:{textAlign:"left"}},"Responses"))),(0,r.kt)("tbody",null,(0,r.kt)("tr",null,(0,r.kt)("td",null,(0,r.kt)("div",{style:{display:"flex"}},(0,r.kt)("div",{style:{marginRight:"var(--ifm-table-cell-padding)"}},(0,r.kt)("code",null,"200")),(0,r.kt)("div",null,(0,r.kt)("p",null,"Email provider successfully updated."))),(0,r.kt)("div",null,(0,r.kt)("table",{style:{display:"table",width:"100%",marginTop:"var(--ifm-table-cell-padding)",marginBottom:"0px"}},(0,r.kt)("thead",null,(0,r.kt)("tr",null,(0,r.kt)("th",{style:{textAlign:"left"}},"Schema ",(0,r.kt)("div",null)))),(0,r.kt)("tbody",null,(0,r.kt)("tr",null,(0,r.kt)("td",null,(0,r.kt)("code",null,"name"),(0,r.kt)("span",{style:{opacity:"0.6"}}," string"),(0,r.kt)("div",{style:{marginTop:"var(--ifm-table-cell-padding)"}},(0,r.kt)("p",null,"Name of the email provider. Can be ",(0,r.kt)("inlineCode",{parentName:"p"},"mailgun"),", ",(0,r.kt)("inlineCode",{parentName:"p"},"mandrill"),", ",(0,r.kt)("inlineCode",{parentName:"p"},"sendgrid"),", ",(0,r.kt)("inlineCode",{parentName:"p"},"ses"),", ",(0,r.kt)("inlineCode",{parentName:"p"},"sparkpost"),", or ",(0,r.kt)("inlineCode",{parentName:"p"},"smtp"),".")))),(0,r.kt)("tr",null,(0,r.kt)("td",null,(0,r.kt)("code",null,"enabled"),(0,r.kt)("span",{style:{opacity:"0.6"}}," boolean"),(0,r.kt)("div",{style:{marginTop:"var(--ifm-table-cell-padding)"}},(0,r.kt)("p",null,"Whether the provider is enabled (true) or disabled (false).")))),(0,r.kt)("tr",null,(0,r.kt)("td",null,(0,r.kt)("code",null,"default_from_address"),(0,r.kt)("span",{style:{opacity:"0.6"}}," string"),(0,r.kt)("div",{style:{marginTop:"var(--ifm-table-cell-padding)"}},(0,r.kt)("p",null,'Email address to use as "from" when no other address specified.')))),(0,r.kt)("tr",null,(0,r.kt)("td",null,(0,r.kt)("code",null,"credentials"),(0,r.kt)("span",{style:{opacity:"0.6"}}," object"),(0,r.kt)("div",{style:{marginTop:"var(--ifm-table-cell-padding)"}},(0,r.kt)("p",null,"Credentials required to use the provider.")),(0,r.kt)("table",{style:{display:"table",width:"100%",marginTop:"var(--ifm-table-cell-padding)",marginBottom:"0px"}},(0,r.kt)("tbody",null,(0,r.kt)("tr",null,(0,r.kt)("td",null,(0,r.kt)("code",null,"api_user"),(0,r.kt)("span",{style:{opacity:"0.6"}}," string"),(0,r.kt)("div",{style:{marginTop:"var(--ifm-table-cell-padding)"}},(0,r.kt)("p",null,"API User.")))),(0,r.kt)("tr",null,(0,r.kt)("td",null,(0,r.kt)("code",null,"region"),(0,r.kt)("span",{style:{opacity:"0.6"}}," string"),(0,r.kt)("div",{style:{marginTop:"var(--ifm-table-cell-padding)"}},(0,r.kt)("p",null,"AWS or SparkPost region.")))),(0,r.kt)("tr",null,(0,r.kt)("td",null,(0,r.kt)("code",null,"smtp_host"),(0,r.kt)("span",{style:{opacity:"0.6"}}," string"),(0,r.kt)("div",{style:{marginTop:"var(--ifm-table-cell-padding)"}},(0,r.kt)("p",null,"SMTP host.")))),(0,r.kt)("tr",null,(0,r.kt)("td",null,(0,r.kt)("code",null,"smtp_port"),(0,r.kt)("span",{style:{opacity:"0.6"}}," integer"),(0,r.kt)("div",{style:{marginTop:"var(--ifm-table-cell-padding)"}},(0,r.kt)("p",null,"SMTP port.")))),(0,r.kt)("tr",null,(0,r.kt)("td",null,(0,r.kt)("code",null,"smtp_user"),(0,r.kt)("span",{style:{opacity:"0.6"}}," string"),(0,r.kt)("div",{style:{marginTop:"var(--ifm-table-cell-padding)"}},(0,r.kt)("p",null,"SMTP username.")))))))),(0,r.kt)("tr",null,(0,r.kt)("td",null,(0,r.kt)("code",null,"settings"),(0,r.kt)("span",{style:{opacity:"0.6"}}," object"),(0,r.kt)("div",{style:{marginTop:"var(--ifm-table-cell-padding)"}},(0,r.kt)("p",null,"Specific provider setting"))))))))),(0,r.kt)("tr",null,(0,r.kt)("td",null,(0,r.kt)("div",{style:{display:"flex"}},(0,r.kt)("div",{style:{marginRight:"var(--ifm-table-cell-padding)"}},(0,r.kt)("code",null,"400")),(0,r.kt)("div",null,(0,r.kt)("p",null,"Invalid request body. The message will vary depending on the cause."))),(0,r.kt)("div",null))),(0,r.kt)("tr",null,(0,r.kt)("td",null,(0,r.kt)("div",{style:{display:"flex"}},(0,r.kt)("div",{style:{marginRight:"var(--ifm-table-cell-padding)"}},(0,r.kt)("code",null,"401")),(0,r.kt)("div",null,(0,r.kt)("p",null,"Invalid signature received for JSON Web Token validation."))),(0,r.kt)("div",null))),(0,r.kt)("tr",null,(0,r.kt)("td",null,(0,r.kt)("div",{style:{display:"flex"}},(0,r.kt)("div",{style:{marginRight:"var(--ifm-table-cell-padding)"}},(0,r.kt)("code",null,"403")),(0,r.kt)("div",null,(0,r.kt)("p",null,"Insufficient scope; expected any of: update:email_provider."))),(0,r.kt)("div",null))),(0,r.kt)("tr",null,(0,r.kt)("td",null,(0,r.kt)("div",{style:{display:"flex"}},(0,r.kt)("div",{style:{marginRight:"var(--ifm-table-cell-padding)"}},(0,r.kt)("code",null,"404")),(0,r.kt)("div",null,(0,r.kt)("p",null,"Email provider has not been configured."))),(0,r.kt)("div",null))),(0,r.kt)("tr",null,(0,r.kt)("td",null,(0,r.kt)("div",{style:{display:"flex"}},(0,r.kt)("div",{style:{marginRight:"var(--ifm-table-cell-padding)"}},(0,r.kt)("code",null,"429")),(0,r.kt)("div",null,(0,r.kt)("p",null,"Too many requests. Check the X-RateLimit-Limit, X-RateLimit-Remaining and X-RateLimit-Reset headers."))),(0,r.kt)("div",null))))))}c.isMDXComponent=!0}}]);